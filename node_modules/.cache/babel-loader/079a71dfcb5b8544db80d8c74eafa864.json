{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst multipartRequest = require('../../lib/multipart-request');\n\nconst configure = require('../../lib/configure');\n\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n\nconst {\n  anySignal\n} = require('any-signal');\n\nconst AbortController = require('native-abort-controller');\n\nmodule.exports = configure(api => {\n  return async (cid, data, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController();\n    const signal = anySignal([controller.signal, options.signal]);\n    const {\n      Hash\n    } = await (await api.post('object/patch/set-data', {\n      timeout: options.timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [`${cid instanceof Uint8Array ? new CID(cid) : cid}`],\n        ...options\n      }),\n      ...(await multipartRequest(data, controller, options.headers))\n    })).json();\n    return new CID(Hash);\n  };\n});","map":{"version":3,"sources":["/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/node_modules/ipfs-http-client/src/object/patch/set-data.js"],"names":["CID","require","multipartRequest","configure","toUrlSearchParams","anySignal","AbortController","module","exports","api","cid","data","options","controller","signal","Hash","post","timeout","searchParams","arg","Uint8Array","headers","json"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,6BAAD,CAAhC;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAMG,iBAAiB,GAAGH,OAAO,CAAC,gCAAD,CAAjC;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAgBJ,OAAO,CAAC,YAAD,CAA7B;;AACA,MAAMK,eAAe,GAAGL,OAAO,CAAC,yBAAD,CAA/B;;AAEAM,MAAM,CAACC,OAAP,GAAiBL,SAAS,CAACM,GAAG,IAAI;AAChC,SAAO,OAAOC,GAAP,EAAYC,IAAZ,EAAkBC,OAAO,GAAG,EAA5B,KAAmC;AACxC;AACA,UAAMC,UAAU,GAAG,IAAIP,eAAJ,EAAnB;AACA,UAAMQ,MAAM,GAAGT,SAAS,CAAC,CAACQ,UAAU,CAACC,MAAZ,EAAoBF,OAAO,CAACE,MAA5B,CAAD,CAAxB;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAM,CAAC,MAAMN,GAAG,CAACO,IAAJ,CAAS,uBAAT,EAAkC;AAC9DC,MAAAA,OAAO,EAAEL,OAAO,CAACK,OAD6C;AAE9DH,MAAAA,MAF8D;AAG9DI,MAAAA,YAAY,EAAEd,iBAAiB,CAAC;AAC9Be,QAAAA,GAAG,EAAE,CACF,GAAET,GAAG,YAAYU,UAAf,GAA4B,IAAIpB,GAAJ,CAAQU,GAAR,CAA5B,GAA2CA,GAAI,EAD/C,CADyB;AAI9B,WAAGE;AAJ2B,OAAD,CAH+B;AAS9D,UACE,MAAMV,gBAAgB,CAACS,IAAD,EAAOE,UAAP,EAAmBD,OAAO,CAACS,OAA3B,CADxB;AAT8D,KAAlC,CAAP,EAYnBC,IAZmB,EAAvB;AAcA,WAAO,IAAItB,GAAJ,CAAQe,IAAR,CAAP;AACD,GApBD;AAqBD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst multipartRequest = require('../../lib/multipart-request')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\nconst { anySignal } = require('any-signal')\nconst AbortController = require('native-abort-controller')\n\nmodule.exports = configure(api => {\n  return async (cid, data, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = anySignal([controller.signal, options.signal])\n\n    const { Hash } = await (await api.post('object/patch/set-data', {\n      timeout: options.timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid instanceof Uint8Array ? new CID(cid) : cid}`\n        ],\n        ...options\n      }),\n      ...(\n        await multipartRequest(data, controller, options.headers)\n      )\n    })).json()\n\n    return new CID(Hash)\n  }\n})\n"]},"metadata":{},"sourceType":"script"}