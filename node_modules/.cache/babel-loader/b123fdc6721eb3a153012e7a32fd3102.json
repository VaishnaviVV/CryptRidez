{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/DriverID.js\";\nimport React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\nclass DriverID extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"main\", {\n          role: \"main\",\n          className: \"col-lg-12 ml-auto mr-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Regional Transport Office of India\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"content mr-auto ml-auto\",\n            style: {\n              maxWidth: '500px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              align: \"center\",\n              children: \"Uploaded Ids\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this), this.props.driver.map((img_var, key) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card mb-4\",\n                style: {\n                  color: \"#037FFF\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"mr-2\",\n                    width: \"30\",\n                    height: \"30\",\n                    src: `data:image/png;base64,${new Identicon(img_var.author, 30).toString()}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 26,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted\",\n                    children: img_var.author\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  id: \"imageList\",\n                  className: \"list-group list-group-flush\",\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"list-group-item\",\n                    children: /*#__PURE__*/_jsxDEV(\"form\", {\n                      onSubmit: event => {\n                        event.preventDefault();\n\n                        if (!img_var.verify) {\n                          img_var.verified = \"Profile is verified\";\n                        } else {\n                          img_var.verified = \"\";\n                        }\n\n                        const name = img_var.driver_name;\n                        const hash = img_var.hash;\n                        const nid = img_var.id;\n                        console.log(hash);\n                        /*this.props.uploadImaging(name,hash,true)*/\n\n                        this.props.verifyDriver(key, img_var.hash, img_var.driver_name, img_var.author);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-center\",\n                        children: /*#__PURE__*/_jsxDEV(\"img\", {\n                          src: `https://ipfs.io/ipfs/api/v0/${img_var.hash}`,\n                          style: {\n                            maxWidth: '420px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 52,\n                          columnNumber: 54\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 52,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-center\",\n                        children: img_var.driver_name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 53,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"text-center\",\n                        children: img_var.verified\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 54,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        type: \"submit\",\n                        className: \"btn btn-success btn-x btn-grp \",\n                        children: \"Accept\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 55,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 36,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 21\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default DriverID;","map":{"version":3,"sources":["/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/DriverID.js"],"names":["React","Component","Identicon","DriverID","render","maxWidth","props","driver","map","img_var","key","color","author","toString","event","preventDefault","verify","verified","name","driver_name","hash","nid","id","console","log","verifyDriver"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\nclass DriverID extends Component {\n\n  render() {\n    return (\n      \n      <div className=\"container-fluid mt-5\">\n        \n        <div className=\"row\">\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" >\n          <h1 className=\"text-center\">Regional Transport Office of India</h1>\n            <div className=\"content mr-auto ml-auto\" style={{ maxWidth: '500px' }}>\n              \n              <br/>\n              <br/>\n              \n              <h3 align='center'>Uploaded Ids</h3>\n\n              \n              {this.props.driver.map((img_var, key) => {\n                return(\n                  <div className=\"card mb-4\" style={{ color: \"#037FFF\" }} key={key} >\n                    <div className=\"card-header\">\n                      <img\n                        className='mr-2'\n                        width='30'\n                        height='30'\n                        src={`data:image/png;base64,${new Identicon(img_var.author, 30).toString()}`}\n                      />\n                      <small className=\"text-muted\">{img_var.author}</small>\n                    </div>\n                    <ul id=\"imageList\" className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">\n                      <form onSubmit={(event) => {\n                        event.preventDefault()\n                        \n                        if(!img_var.verify){\n                          img_var.verified = \"Profile is verified\"\n                        }\n                        else{\n                          img_var.verified = \"\"\n                        }\n                        const name = img_var.driver_name\n                        const hash = img_var.hash\n                        const nid = img_var.id\n                        console.log(hash)\n                        /*this.props.uploadImaging(name,hash,true)*/\n                        this.props.verifyDriver(key,img_var.hash,img_var.driver_name,img_var.author)\n                        }} >\n                          <p className=\"text-center\"><img src={`https://ipfs.io/ipfs/api/v0/${img_var.hash}`} style={{ maxWidth: '420px'}}/></p>\n                          <p className=\"text-center\">{img_var.driver_name}</p>\n                          <p className=\"text-center\">{img_var.verified}</p>\n                          <button type=\"submit\" className=\"btn btn-success btn-x btn-grp \">Accept</button>\n                        </form>\n                      </li>\n                      \n                    </ul>\n                    \n                  </div>\n                )\n              })}\n\n\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DriverID;"]},"metadata":{},"sourceType":"module"}