{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/App.js\";\nimport './App.scss';\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport user from './abis/user.json';\nimport { AuthProvider } from './contexts/AuthContext';\nimport NavBar from './Components/NavBar';\nimport PrivateRoute from './Components/PrivateRoute';\nimport HomePage from './Pages/HomePage';\nimport LoginPage from './Pages/LoginPage';\nimport SignUpPage from './Pages/SignUpPage';\nimport Dashboard from './Pages/Dashboard';\nthis.state = {\n  navToggle: false\n};\n\nconst navClick = () => {\n  this.setState({\n    navToggle: true\n  });\n}; // IPFS for ID proofs of Driver\n\n\nconst ipfsClient = require('ipfs-http-client');\n\nconst ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nconst authorizedAccounts = ['0x50Fe6C433c41595396044A9bcdF9500963D4e236'];\nconst authorizedAccounts2 = ['0x2fb5eBC35A6d6e7c26bEC01122b34d84D7727aD9'];\n\nclass App extends Component {\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3; // Load account\n\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    const unitbal = await web3.eth.getBalance(accounts[0]);\n    const balanceacc = await web3.utils.fromWei(unitbal, 'ether');\n    this.setState({\n      balance: balanceacc\n    });\n    const networkId = await web3.eth.net.getId();\n    const networkData = user.networks[networkId];\n    console.log(networkData);\n\n    if (networkData) {\n      const User = new web3.eth.Contract(user.abi, networkData.address);\n      this.setState({\n        User\n      });\n      const reqCounts = await User.methods.reqCount().call();\n      this.setState({\n        reqCounts\n      });\n      const imgCounts = await User.methods.imgCount().call();\n      this.setState({\n        imgCounts\n      });\n      const rideCounts = await User.methods.rideCount().call();\n      this.setState({\n        rideCounts\n      }); //Load requests\n\n      for (var i = 1; i <= reqCounts; i++) {\n        const users_var = await User.methods.users(i).call();\n        this.setState({\n          users: [...this.state.users, users_var]\n        });\n      } //Load images\n\n\n      for (var j = 1; j <= imgCounts; j++) {\n        const img_var = await User.methods.driver(j).call();\n        this.setState({\n          driver: [...this.state.driver, img_var]\n        });\n      }\n      /** */\n\n\n      for (var k = 1; k <= rideCounts; k++) {\n        const ride_var = await User.methods.ride(k).call();\n        this.setState({\n          ride: [...this.state.ride, ride_var]\n        });\n      }\n    } else {\n      window.alert('User contract not deployed to detected network.');\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      navToggle: ''\n    };\n\n    this.uploadIdProof = event => {\n      event.preventDefault();\n      const file = event.target.files[0];\n      const reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => {\n        this.setState({\n          buffer: Buffer(reader.result)\n        });\n        console.log('buffer', this.state.buffer);\n      };\n    };\n\n    this.rideRequest = (source, destination, date, time) => {\n      this.setState({\n        loading: true\n      });\n      this.state.User.methods.rideReq(source, destination, date, time).send({\n        from: this.state.account\n      }).on('transactionHash', hash => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.uploadRide = (source, destination, date, time, rider, amount) => {\n      this.setState({\n        loading: true\n      });\n      this.state.User.methods.uploadRide(source, destination, date, time, rider, amount).send({\n        from: this.state.account\n      }).on('transactionHash', hash => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.uploadIdImage = (drivername, hash, verified) => {\n      this.state.User.methods.uploadImg(hash, drivername, verified).send({\n        from: this.state.account\n      }).on('transactionHash', hash => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.uploadImage = drivername => {\n      // console.log(\"submitting file to ipfs...\")\n      ipfs.add(this.state.buffer, (error, result) => {\n        // console.log('Ipfs result', result)\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        this.setState({\n          loading: true\n        });\n        this.state.User.methods.uploadImg(result[0].hash, drivername, false).send({\n          from: this.state.account\n        }).on('transactionHash', hash => {\n          this.setState({\n            loading: false\n          });\n        });\n      });\n    };\n\n    this.verifyDriver = (id, hashs, name, author) => {\n      this.state.User.methods.verifyDriver(id, hashs, name, author).send({\n        from: this.state.account\n      }).on('transactionHash', hash => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.tipImageOwner = (id, tipAmount) => {\n      this.setState({\n        loading: true\n      });\n      this.setState({\n        loading: false\n      });\n      this.state.cryptridez.methods.tipImageOwner(id).send({\n        from: this.state.account,\n        value: tipAmount\n      }).on('transactionHash', hash => {});\n    };\n\n    this.rideAmount = (id, amount) => {\n      this.state.User.methods.ridePayment(id).send({\n        from: this.state.account,\n        value: amount\n      }).on('transactionHash', hash => {});\n    };\n\n    this.state = {\n      balance: '',\n      account: '',\n      User: null,\n      users: [],\n      driver: [],\n      ride: [],\n      loading: true\n    };\n  }\n\n  render() {\n    //  let body;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sidebar ${state.navToggle ? 'nav-toggle' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav-btn\",\n        onClick: navClick,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lines-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lines-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lines-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(Router, {\n            children: /*#__PURE__*/_jsxDEV(AuthProvider, {\n              children: /*#__PURE__*/_jsxDEV(Switch, {\n                children: [/*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/\",\n                  component: HomePage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(PrivateRoute, {\n                  exact: true,\n                  path: \"/\",\n                  component: Dashboard\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/signup\",\n                  component: SignUpPage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Route, {\n                  path: \"/login\",\n                  component: LoginPage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/App.js"],"names":["Switch","Route","BrowserRouter","Router","React","Component","Web3","user","AuthProvider","NavBar","PrivateRoute","HomePage","LoginPage","SignUpPage","Dashboard","state","navToggle","navClick","setState","ipfsClient","require","ipfs","host","port","protocol","authorizedAccounts","authorizedAccounts2","App","componentWillMount","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","accounts","eth","getAccounts","account","unitbal","getBalance","balanceacc","utils","fromWei","balance","networkId","net","getId","networkData","networks","console","log","User","Contract","abi","address","reqCounts","methods","reqCount","call","imgCounts","imgCount","rideCounts","rideCount","i","users_var","users","j","img_var","driver","k","ride_var","ride","constructor","props","uploadIdProof","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","rideRequest","source","destination","date","time","loading","rideReq","send","from","on","hash","uploadRide","rider","amount","uploadIdImage","drivername","verified","uploadImg","uploadImage","add","error","verifyDriver","id","hashs","name","author","tipImageOwner","tipAmount","cryptridez","value","rideAmount","ridePayment","render"],"mappings":"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","sourcesContent":["import './App.scss';\n\nimport {Switch,Route, BrowserRouter as Router} from 'react-router-dom';\n\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\n\nimport user from './abis/user.json';\n\nimport { AuthProvider } from './contexts/AuthContext';\n\nimport NavBar from './Components/NavBar';\nimport PrivateRoute from './Components/PrivateRoute';\n\nimport HomePage from './Pages/HomePage';\nimport LoginPage from './Pages/LoginPage';\nimport SignUpPage from './Pages/SignUpPage';\nimport Dashboard from './Pages/Dashboard';\n\nthis.state={ navToggle: false };\n      const navClick=()=>{\n        this.setState({navToggle: true});\n      }\n\n// IPFS for ID proofs of Driver\nconst ipfsClient = require('ipfs-http-client');\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }); // leaving out the arguments will default to these values\n\nconst authorizedAccounts = ['0x50Fe6C433c41595396044A9bcdF9500963D4e236']\nconst authorizedAccounts2 = ['0x2fb5eBC35A6d6e7c26bEC01122b34d84D7727aD9']\n\nclass App extends Component{\n  state = {\n    navToggle:''\n};\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    \n\n    this.setState({ account: accounts[0] })\n    const unitbal = await web3.eth.getBalance(accounts[0])\n    const  balanceacc = await web3.utils.fromWei(unitbal,'ether')\n\n    this.setState({balance: balanceacc})\n\n    const networkId = await web3.eth.net.getId()\n    const networkData = user.networks[networkId]\n    console.log(networkData);\n\n    if (networkData) {\n      const User = new web3.eth.Contract(user.abi, networkData.address)\n      this.setState({ User })\n\n      const reqCounts = await User.methods.reqCount().call()\n      this.setState({ reqCounts })\n      \n      const imgCounts = await User.methods.imgCount().call()\n      this.setState({ imgCounts })\n\n      const rideCounts = await User.methods.rideCount().call()\n      this.setState({ rideCounts })\n      \n      //Load requests\n      for (var i = 1; i <= reqCounts; i++) {\n        const users_var = await User.methods.users(i).call()\n        this.setState({\n          users: [...this.state.users,users_var]\n        })\n      }\n\n      //Load images\n\n      for (var j=1; j<=imgCounts; j++){\n        const img_var = await User.methods.driver(j).call()\n        this.setState({\n          driver: [...this.state.driver,img_var]\n        })\n      }\n     /** */\n\n     for (var k=1; k<=rideCounts; k++){\n      const ride_var = await User.methods.ride(k).call()\n      this.setState({\n        ride: [...this.state.ride,ride_var]\n      })\n    }\n\n    } else {\n      window.alert('User contract not deployed to detected network.')\n    }\n\n\n  }\n\n  uploadIdProof= event => {\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  rideRequest = (source,destination,date,time) => {\n    this.setState({loading:true })\n      this.state.User.methods.rideReq(source,destination,date,time).send({from: this.state.account}).on('transactionHash', (hash) => {\n        this.setState({ loading: false })\n      })\n  }\n\n  uploadRide = (source,destination,date,time,rider,amount) => {\n    this.setState({loading:true })\n      this.state.User.methods.uploadRide(source,destination,date,time,rider,amount).send({from: this.state.account}).on('transactionHash', (hash) => {\n        this.setState({ loading: false })\n      })\n  }\n\n  uploadIdImage = (drivername,hash,verified) =>\n  {\n    this.state.User.methods.uploadImg(hash,drivername,verified).send({from: this.state.account}).on('transactionHash',(hash) => {\n      this.setState({loading:false})\n    })\n\n  }\n  uploadImage = drivername => {\n    // console.log(\"submitting file to ipfs...\")\n\n    ipfs.add(this.state.buffer, (error, result) => {\n      // console.log('Ipfs result', result)\n      if (error) {\n        console.error(error)\n        return\n      }\n\n    this.setState({loading:true})\n      this.state.User.methods.uploadImg(result[0].hash,drivername,false).send({from: this.state.account}).on('transactionHash',(hash) => {\n        this.setState({loading:false})\n      })\n    })\n  }\n  verifyDriver = (id,hashs,name,author) => {\n\n    this.state.User.methods.verifyDriver(id,hashs,name,author).send({from: this.state.account}).on('transactionHash',(hash) => {\n      this.setState({loading:false})\n    })\n    }\n\n    tipImageOwner = (id, tipAmount) =>{\n      this.setState({ loading: true })\n      this.setState({ loading: false })\n      this.state.cryptridez.methods.tipImageOwner(id).send({ from: this.state.account, value: tipAmount }).on('transactionHash', (hash) => {\n      })\n    }\n  \n    rideAmount = (id,amount) =>{\n      this.state.User.methods.ridePayment(id).send({ from: this.state.account, value: amount }).on('transactionHash', (hash) => {\n      })\n\n    \n    }\n  \n    constructor(props) {\n      super(props)\n      this.state = {\n        balance:'',\n        account: '',\n        User: null,\n        users:[],\n        driver:[],\n        ride:[],\n        loading: true,\n        \n      }\n    }\n    \n   render(){\n    //  let body;\n      \n     return ( \n          <div className=\"App\">\n            <div className={`sidebar ${state.navToggle ? 'nav-toggle': ''}`}>\n              <NavBar />\n            </div>\n            <div className=\"nav-btn\" onClick={navClick}>\n              <div className=\"lines-1\"></div>\n              <div className=\"lines-2\"></div>\n              <div className=\"lines-3\"></div>\n            </div>\n            <div className=\"main-content\">\n                <div className=\"content\">\n                <Router>\n                    <AuthProvider>\n                      <Switch>\n                        <Route path=\"/\" component={HomePage}/>\n                        <PrivateRoute exact path=\"/\" component={Dashboard} />\n                        <Route path=\"/signup\" component={SignUpPage} />\n                        <Route path=\"/login\" component={LoginPage} />\n                      </Switch>\n                    </AuthProvider>\n              </Router>\n                </div>\n            </div>\n          </div>\n        );\n      }\n      \n     \n   }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}