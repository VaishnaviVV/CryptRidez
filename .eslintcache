[{"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/index.js":"1","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/App.js":"2","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/HomePage.js":"3","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/RiderSignupPage.js":"4","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/NavBar.js":"5","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/Tittle.js":"6","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/LoginPage.js":"7","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/User.js":"8","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/Dashboard.js":"9","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/contexts/AuthContext.js":"10","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/firebase.js":"11","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/PrivateRoute.js":"12","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/DriverSignUpPage.js":"13","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/DriverSignupPage.js":"14","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/Requests.js":"15"},{"size":248,"mtime":1638458764868,"results":"16","hashOfConfig":"17"},{"size":5973,"mtime":1638490703326,"results":"18","hashOfConfig":"17"},{"size":1665,"mtime":1638243148961,"results":"19","hashOfConfig":"17"},{"size":2655,"mtime":1638514148455,"results":"20","hashOfConfig":"17"},{"size":5585,"mtime":1638514186972,"results":"21","hashOfConfig":"17"},{"size":248,"mtime":1611504364000,"results":"22","hashOfConfig":"17"},{"size":2966,"mtime":1638458943365,"results":"23","hashOfConfig":"17"},{"size":5821,"mtime":1638460058057,"results":"24","hashOfConfig":"17"},{"size":6354,"mtime":1638514252569,"results":"25","hashOfConfig":"17"},{"size":1005,"mtime":1638514042857,"results":"26","hashOfConfig":"17"},{"size":504,"mtime":1637690959898,"results":"27","hashOfConfig":"17"},{"size":411,"mtime":1637677237993,"results":"28","hashOfConfig":"17"},{"size":2849,"mtime":1638110231405,"results":"29","hashOfConfig":"17"},{"size":2838,"mtime":1638514142286,"results":"30","hashOfConfig":"17"},{"size":3114,"mtime":1638514129985,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1my86sz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/index.js",[],["71","72"],"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/App.js",[],"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/HomePage.js",[],"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/RiderSignupPage.js",["73"],"import React, { useRef, useState } from \"react\"\nimport { Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { useHistory } from \"react-router-dom\"\nimport Tittle from \"../Components/Tittle\"\n\nexport default function RiderSignupPage() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { signup } = useAuth()\n  const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    \n    emailRef.current.value=emailRef.current.value+\"@ridercryptridez.com\"\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/login\")\n    } catch {\n      setError(\"Failed to create an account\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n        <div className=\"SignupPage\">\n          <Tittle title={'Rider Sign Up'} span={'Rider'} />\n       \n       <div className=\"signup-container\">\n        <div className=\"signup-form-box\">\n          <div className=\"header-form\">\n            <h4 className=\"text-primary text-center\"><i className=\"fa fa-user-circle\" style={{fontSize:\"110px\"}}></i></h4>\n            <div className=\"image\">\n            </div>\n          </div>\n          <div className=\"body-form\">\n              <form onSubmit={handleSubmit}>\n              {error && <Alert variant=\"danger\">{error}</Alert>}\n\n                <div class=\"input-group mb-3\">\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Email\" ref={emailRef}/>\n                  <span class=\"input-group-text\" id=\"basic-addon2\">@ridercryptridez.com</span>\n                </div>\n\n                <div className=\"input-group mb-3\">\n                  <input type=\"password\" className=\"form-control\" placeholder=\"Password\" ref={passwordRef} id=\"password\" />\n                </div>\n                <div className=\"input-group mb-3\">\n                  <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" ref={passwordConfirmRef} id=\"confirmpassword\"  />\n                </div>\n                <button type=\"submit\" className=\"btn btn-secondary btn-block\">SIGN UP</button>\n                <div className=\"message\">\n                <div><a href=\"/login\">Already registered?</a></div>\n                </div>\n              </form>\n            \n          </div>\n        </div>\n       </div>  \n       </div> \n    \n    </>\n  )\n}\n","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/NavBar.js",["74","75","76"],"import React, { Component,useState } from 'react'\nimport avatar from '../img/car.png';\nimport {NavLink,useHistory} from 'react-router-dom';\nimport {useAuth}  from \"../contexts/AuthContext\"\nimport {auth} from \"../firebase\"\nimport Identicon from 'identicon.js';\nimport etherbal from \"../img/ethereum.png\"\nimport \"../styles/navbar.css\"\n\nconst NavBar=(props)=>{\n\n    const [error, setError] = useState(\"\")\n    const { logout } = useAuth()\n    const history = useHistory()\n    \n    async function handleLogout() {\n        setError(\"\")\n\n        try {\n        await logout()\n        history.push(\"/\")\n        } catch {\n        setError(\"Failed to log out\")\n        }\n    }\n\n        var user=auth.currentUser;\n        if (user) {\n       \n          return (\n            <div className=\"NavBar\">\n                       <nav className=\"nav\">\n                           <div className=\"profile\">\n                               <img src={avatar} alt=\"\"/>\n                            </div>\n                            <ul className=\"nav-items\">\n\n                            <div\n                                className=\"nav-item\"\n                                href=\"#\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                                >\n                                <h2 className=\"crypttitle\">Crypt Ridez &emsp;&emsp;&emsp;</h2>\n                                <hr  color='black' ></hr>\n                                <small className=\"text-secondary\">\n                                            <small id=\"account\">&nbsp;</small>\n                                            </small>\n                                            <small className=\"text-secondary\">\n                                            </small>\n                                            { props.account\n                                            ? <img\n                                                className='ml-2'\n                                                width='30'\n                                                height='30'\n                                                src={`data:image/png;base64,${new Identicon(props.account, 30).toString()}`}\n                                            />  \n                                            : <span></span>\n                                            }\n                                            <small id=\"account2\">{props.account}</small>\n                                <hr  color='black' ></hr>\n                                <img src={etherbal} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\n                                <p>&nbsp;{props.balance}&nbsp;Ethers</p>\n                            </div>\n           \n                                            \n                             \n                               <li></li>\n                                        \n                                        <li>  <button type=\"submit\" className=\"btn btn-secondary btn-block\" onClick={handleLogout}>Logout</button></li>\n                           </ul>\n           \n                           <footer className=\"footer\">\n                               <p>\n                                   @RIDE SHARING\n                               </p>\n                       </footer>\n                       </nav>\n                       \n                   </div>\n          )\n        } else {\n \n            return (\n                <div className=\"NavBar\">\n                           <nav className=\"nav\">\n                               <div className=\"profile\">\n                                   <img src={avatar} alt=\"\"/>\n                                </div>\n               \n                               <ul className=\"nav-items\">\n                                   <li className=\"nav-item\">\n                                   <NavLink className=\"nav-link\" to=\"/\" exact>\n                                       Home\n                                   </NavLink>\n                           \n                                   </li>\n                                 \n                                   <li className=\"nav-item\">\n                                   <NavLink className=\"nav-link\" exact to=\"/login\">\n                                       Login\n                                       </NavLink>\n               \n               \n                                       </li>\n                                       <li className=\"nav-item\">\n                                       <NavLink className=\"nav-link\" to=\"/ridersignup\" exact>\n                                           Rider Sign Up\n                                           </NavLink>\n               \n                                       </li>\n                                       <li className=\"nav-item\">\n                                       <NavLink className=\"nav-link\" to=\"/driversignup\" exact>\n                                           Driver Sign Up\n                                           </NavLink>\n               \n                                       </li>\n                                   \n                                  \n                               </ul>\n               \n                               <footer className=\"footer\">\n                                   <p>\n                                       @RIDE SHARING\n                                   </p>\n                           </footer>\n                           </nav>\n                           \n                       </div>\n            )\n        }\n\n    }\n        \nexport default NavBar;\n","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/Tittle.js",[],"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/LoginPage.js",["77","78","79"],"import React, { useRef, useState } from \"react\"\r\nimport {  Alert } from \"react-bootstrap\"\r\nimport {useAuth}  from \"../contexts/AuthContext\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Tittle from '../Components/Tittle';\r\nimport './Login.css';\r\n\r\nfunction LoginPage() {\r\n  const emailRef = useRef()\r\n  const passwordRef = useRef()\r\n  const { login } = useAuth()\r\n  const [error, setError] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const [email, setEmail] = useState(\"\")\r\n  const history = useHistory()\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n    \r\n    try {\r\n      setError(\"\")\r\n      setLoading(true)\r\n      sessionStorage.setItem('login',emailRef.current.value);\r\n      await login(emailRef.current.value, passwordRef.current.value)\r\n\r\n      history.push(\"/dashboard\")\r\n\r\n      console.log(sessionStorage.getItem('login'))\r\n      //setEmail({email:emailRef.current.value})\r\n    } catch {\r\n      setError(\"Failed to log in\")\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    // <>\r\n    <div className=\"LoginPage\">\r\n            <Tittle title={'Login'} span={'Login'} />\r\n       <div className=\"container\">\r\n        <div className=\"form-box\">\r\n          <div className=\"header-form\">\r\n            <h4 className=\"text-primary text-center\"><i className=\"fa fa-user-circle\" style={{fontSize:\"110px\"}}></i></h4>\r\n            <div className=\"image\">\r\n            </div>\r\n          </div>\r\n          <div className=\"body-form\">\r\n           <form onSubmit={handleSubmit}>\r\n           {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n              <div className=\"input-group mb-3\">\r\n   <div className=\"input-group-prepend\">\r\n    <span className=\"input-group-text\"><i class=\"fa fa-user\"></i></span>\r\n  </div>\r\n  <input type=\"email\" className=\"form-control\" ref={emailRef} placeholder=\"Email\" />\r\n</div>\r\n <div className=\"input-group mb-3\">\r\n   <div className=\"input-group-prepend\">\r\n    <span className=\"input-group-text\"><i class=\"fa fa-lock\"></i></span>\r\n  </div>\r\n  <input type=\"password\" className=\"form-control\" ref={passwordRef} placeholder=\"Password\" />\r\n</div>\r\n{/* <BrowserRouter> */}\r\n  {/* <Link to=\"/bookride\"> */}\r\n      <button type=\"submit\" className=\"btn btn-secondary btn-block\">LOGIN</button>\r\n  {/* </Link> */}\r\n  {/* <Route path=\"/bookride\" exact component={BookRide} /> */}\r\n\r\n{/* </BrowserRouter> */}\r\n <div className=\"message\">\r\n{/* <div><input type=\"checkbox\" /> Remember ME</div> */}\r\n <div><a href=\"/\">Didn't register?</a></div>\r\n </div>\r\n   </form>\r\n            {/* <div className=\"social\">\r\n              <a href=\"https://www.facebook.com/\"><i className=\"fab fa-facebook\"></i></a>\r\n              <a href=\"https://twitter.com/login\"><i className=\"fab fa-twitter-square\"></i></a>\r\n              <a href=\"#\"><i className=\"fab fa-google\"></i></a>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n       </div>   \r\n       </div>\r\n        \r\n  )\r\n}\r\nexport default LoginPage;","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/User.js",["80","81","82","83","84","85","86"],"import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\n\n\n\nclass User extends Component {\n\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n \n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  };\n\n  render() {\n    \n    return (\n      <div role=\"User\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\n        <br></br>\n        <br></br>\n        <br></br>\n        \n        <h1>Add your Riderequest here</h1>\n        <form onSubmit={(event) => {\n                event.preventDefault()\n                const source = this.userSource.value\n                const destination = this.userDestination.value\n                const date = this.rideDate.value\n                const time = this.rideTime.value\n                this.props.rideReq(source,destination,date,time)\n              }} >\n                {/*<input type='file' accept=\".jpg, .jpeg, .png, .bmp, .gif\" onChange={this.props.captureFile} />*/}\n                  <div className=\"form-group mr-sm-2\">\n                    <br></br>\n                      <input\n                        id=\"userSource\"\n                        type=\"text\"\n                        ref={(input) => { this.userSource = input }}\n                        className=\"form-control\"\n                        placeholder=\"User source...\"\n                        required />\n\n                      <br></br>\n\n                        <input\n                            id=\"userDestination\"\n                            type=\"text\"\n                            ref={(input) => { this.userDestination = input }}\n                            className=\"form-control\"\n                            placeholder=\"User Destination...\"\n                            required />\n                        <br/>\n                        <input\n                        id=\"rideDate\"\n                        type=\"date\"\n                        ref={(input) => {this.rideDate = input}}\n                        className = \"form-control\"\n                        required/>\n                        <br/>\n                        <input\n                        id=\"rideTime\"\n                        type=\"time\"\n                        ref={(input) => {this.rideTime = input}}\n                        className = \"form-control\"\n                        required/>\n\n                  </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Upload!</button>\n              </form>\n              <br></br>\n              <hr></hr>\n\n              {this.props.ride.map((ride_var, key) => {\n                let acc = this.props.account\n                let accs = acc.toString()\n                if(accs.toLowerCase() == ride_var.rider.toLowerCase()){\n                  return(\n                  \n                    <div className=\"card mb-4\" style={{ color: \"#037FFF\" }}  key={key} >\n                      <div className=\"card-header\">\n                        <img\n                          className='mr-2'\n                          width='30'\n                          height='30'\n                          src={`data:image/png;base64,${new Identicon(ride_var.author, 30).toString()}`}\n                        />\n                        <small className=\"text-muted\"><b>Driver:&emsp;</b>{ride_var.author}</small>\n                      </div>\n                      <ul id=\"imageList\" className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">\n                        <form onSubmit={(event) => {\n                          event.preventDefault()                        \n                          let fare = ride_var.rideamount.toString()\n                          let amount = window.web3.utils.toWei(fare, 'Ether')\n                          this.props.rideAmount(ride_var.author,amount)\n                          \n                        }}\n                        >\n                            <p>Source: {ride_var.rsource}</p>\n                            <p>Destination: {ride_var.rdestination}</p>\n                            <p>Date: {ride_var.rdate}</p>\n                            <p>Time: {ride_var.rtime}</p>\n                            <p>Rider: {ride_var.rider}</p>\n                            <p>Amount: {ride_var.rideamount.toString()} Ethers</p>\n                            <button type=\"submit\" className=\"btn btn-success btn-x btn-grp \">Pay</button>\n                            </form>\n  \n                        </li>\n                        \n                      </ul>\n                      \n                    </div>\n                    \n                  )\n                }\n                \n              })}\n\n              \n                \n                  {/* <Map google={this.props.google} onClick={this.onMapClicked}>\n                    <Marker onClick={this.onMarkerClick}\n                      name={'Current location'} />\n \n                      <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}>\n                          <div>\n                            <h1>{this.state.selectedPlace.name}</h1>\n                          </div>\n                      </InfoWindow>\n                  </Map> */}\n                \n              \n      </div>\n      \n    );\n  }\n}\n\n\n\n// export default Maps;\n//export default userclass;\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyDDsCWBRT7TbgBrNZ3rwGV5sojwLBllPic')\n})(User)","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/Dashboard.js",["87","88"],"import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport * as util from \"ethereumjs-util\";\nimport '../App.css';\nimport user from '../abis/user.json'\nimport Requests from '../Components/Requests'\n\nimport User from '../Components/User'\n\nconst crypto=require('crypto')\n\nclass Dashboard extends Component {\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3.providers.HttpProvider(\"127.0.0.1:9545\")\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    \n    \n\n    this.setState({balance: balanceacc})\n\n    const networkId = await web3.eth.net.getId()\n    const networkData = user.networks[networkId]\n    let reqCounts=0,imgCounts=0,rideCounts=0;\n\n    if (networkData) {\n      const user1 = new web3.eth.Contract(user.abi, networkData.address)\n\n      this.setState({ user1 })\n\n\n      const reqCountsPromise =  user1.methods.reqCount().call()\n\n      \n      reqCountsPromise.then((reqCount) => {\n        reqCounts=reqCount\n      })\n\n      this.setState({ rideCounts })\n\n      \n      const imgCountsPromise =  user1.methods.imgCount().call()\n\n      \n      imgCountsPromise.then((imgCount) => {\n        imgCounts=imgCount\n      }\n\n      )\n\n      this.setState({ imgCounts })\n\n     \n      const rideCountsPromise =  user1.methods.rideCount().call()\n\n      rideCountsPromise.then((rideCount) => {\n        rideCounts=rideCount\n      })\n\n\n      this.setState({ reqCounts })\n     \n      for (var i = 0; i <= reqCounts; i++) {\n        const users_var = await user1.methods.users(i).call()\n\n        this.setState({\n          users: [...this.state.users,users_var]\n        })\n      }\n\n      //Load images\n      \n      for (var j=0; j<=imgCounts; j++){\n        const img_var = await user1.methods.driver(1).call()\n\n        \n        this.setState({\n          driver: [...this.state.driver,img_var]\n        })\n      }\n     /** */\n\n     for (var k=0; k<=rideCounts; k++){\n      const ride_var = await user1.methods.ride(k).call()\n      // console.log(ride_var);\n\n      this.setState({\n        ride: [...this.state.ride,ride_var]\n      })\n\n      \n    }\n\n\n    var message = crypto.randomBytes(20).toString('hex');\n    var hash = web3.utils.sha3(message)\n    const data=await web3.eth.personal.sign(hash, accounts[0])\n    this.setState({\n      signature: data\n    })\n      this.setState({\n        message: message\n      })\n    var nonce = \"\\0x19Ethereum Signed Message:\\n\" + this.state.signature.length + this.state.signature\n    nonce = util.keccak(Buffer.from(nonce, \"utf-8\"))\n    const { v, r, s } = util.fromRpcSig(this.state.signature)\n    const pubKey = util.ecrecover(util.toBuffer(nonce), v, r, s)\n    const addrBuf = util.pubToAddress(pubKey)\n    const addr = util.bufferToHex(addrBuf)\n\n    var message_hash=web3.utils.sha3(this.state.message)\n\n    var signing_address = await web3.eth.personal.ecRecover(message_hash,this.state.signature)\n\n    this.setState({\n      signing_address: signing_address\n    })\n   \n    this.setState({ account: signing_address })\n    var unitbal = await web3.eth.getBalance(this.state.account)\n    var balanceacc = await web3.utils.fromWei(unitbal,'ether')\n\n    this.setState({balance: balanceacc})\n\n\n    } else {\n      window.alert('User contract not deployed to detected network.')\n    }\n\n  }  \n\n  rideReq = (source,destination,date,time) => {\n    this.setState({loading:true })\n      this.state.user1.methods.rideReq(source,destination,date,time).send({from: this.state.account}).on('transactionHash', (hash) => {\n        this.setState({ loading: false })\n      })\n  }\n\n  uploadRide = (source,destination,date,time,rider,amount) => {\n    this.setState({loading:true })\n      this.state.user1.methods.uploadRide(source,destination,date,time,rider,amount).send({from: this.state.account}).on('transactionHash', (hash) => {\n        this.setState({ loading: false })\n      })\n  }\n\n  \n  tipImageOwner = (id, tipAmount) =>{\n    this.setState({ loading: true })\n    this.setState({ loading: false })\n    this.state.cryptridez.methods.tipImageOwner(id).send({ from: this.state.account, value: tipAmount }).on('transactionHash', (hash) => {\n    })\n  }\n\n  rideAmount = (id,amount) =>{\n    this.state.user1.methods.ridePayment(id).send({ from: this.state.account, value: amount }).on('transactionHash', (hash) => {\n    })\n  }\n\n  \n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      balance:'',\n      account: '',\n      user1: null,\n      users:[],\n      driver:[],\n      ride:[],\n      signature:'',\n      message:'',\n      signing_address:'',\n      loading: true,\n      email:'',\n      buffer:'',\n      \n      img:[]\n    }\n  }\n\n  \n\n  render() {\n\n    let body\n    \n    const authorizedAccounts = ['0x50Fe6C433c41595396044A9bcdF9500963D4e236'.toLowerCase()]\n    const authorizedAccounts2 = ['0x3d876A0BfFBCd490a6D23202ac2b5D66A26942A1'.toLowerCase()]\n\n    var email=sessionStorage.getItem('login')\n    var domain = email.substring(email.lastIndexOf(\"@\")+1);\n  \n        if(authorizedAccounts.includes(this.state.signing_address) && domain===\"drivercryptridez.com\"){\n          \n          body = \n          <Requests\n          account={this.state.signing_address}\n          users={this.state.users}\n          driver={this.state.driver}\n          captureFile={this.captureFile}\n          uploadImage={this.uploadImage}\n          uploadRide = {this.uploadRide}\n        />\n        }\n        else if(authorizedAccounts2.includes(this.state.signing_address) && domain===\"ridercryptridez.com\"){          \n          body = \n          <User\n          account = {this.state.signing_address}\n          rideReq = {this.rideReq} \n          users={this.state.users}\n          uploadRide = {this.uploadRide}\n          ride = {this.state.ride}\n          rideAmount = {this.rideAmount}\n          />\n        }\n        \n\n      this.props.sendValuestoApp(this.state?.signing_address,this.state?.balance)\n\n    return (\n      <div>\n        { body }\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/contexts/AuthContext.js",[],"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/firebase.js",[],"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/PrivateRoute.js",[],"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/DriverSignUpPage.js",["89","90","91","92","93","94","95","96"],"/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Pages/DriverSignupPage.js",["97"],"import React, { useRef, useState } from \"react\"\nimport { Alert } from \"react-bootstrap\"\nimport { useAuth } from \"../contexts/AuthContext\"\nimport { useHistory } from \"react-router-dom\"\nimport Tittle from \"../Components/Tittle\"\n\nexport default function DriverSignupPage() {\n  const emailRef = useRef()\n  const passwordRef = useRef()\n  const passwordConfirmRef = useRef()\n  const { signup } = useAuth()\n  const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n\n    emailRef.current.value=emailRef.current.value+\"@drivercryptridez.com\"\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\")\n    }\n\n    try {\n      setError(\"\")\n      setLoading(true)\n      await signup(emailRef.current.value, passwordRef.current.value)\n      history.push(\"/login\")\n    } catch {\n      setError(\"Failed to create an account\")\n    }\n\n    setLoading(false)\n  }\n\n  return (\n    <>\n        <div className=\"SignupPage\">\n          <Tittle title={'Driver Sign Up'} span={'Driver'} />\n       \n       <div className=\"signup-container\">\n        <div className=\"signup-form-box\">\n          <div className=\"header-form\">\n            <h4 className=\"text-primary text-center\"><i className=\"fa fa-user-circle\" style={{fontSize:\"110px\"}}></i></h4>\n            <div className=\"image\">\n            </div>\n          </div>\n          <div className=\"body-form\">\n           <form onSubmit={handleSubmit}>\n           {error && <Alert variant=\"danger\">{error}</Alert>}\n\n            <div class=\"input-group mb-3\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"Email\" ref={emailRef}/>\n              <span class=\"input-group-text\" id=\"basic-addon2\">@drivercryptridez.com</span>\n            </div>\n\n            <div className=\"input-group mb-3\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" ref={passwordRef} id=\"password\" />\n            </div>\n            <div className=\"input-group mb-3\">\n              <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" ref={passwordConfirmRef} id=\"confirmpassword\"  />\n            </div>\n            <button type=\"submit\" className=\"btn btn-secondary btn-block\">SIGN UP</button>\n            <div className=\"message\">\n            <div><a href=\"/login\">Already registered?</a></div>\n            </div>\n          </form>\n            {/* <div className=\"social\">\n              <a href=\"#\"><i className=\"fab fa-facebook\"></i></a>\n              <a href=\"#\"><i className=\"fab fa-twitter-square\"></i></a>\n              <a href=\"#\"><i className=\"fab fa-google\"></i></a>\n            </div> */}\n          </div>\n        </div>\n       </div>  \n       </div> \n    \n    </>\n  )\n}\n","/Users/narendraomprakash/Desktop/Narendra/Semester-V-FALL2021/PDC/J-Component/Integrated-CryptRidez/src/Components/Requests.js",["98"],"import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\nclass Requests extends Component {\n  \n\n  render() {\n    return (\n      \n      <div className=\"container-fluid mt-5\">\n              <h3 align='center'>Ride Requests</h3>\n              {this.props.users.map((users_var, key) => {\n                // if(acc_verified){\n                  return(\n                    <div className=\"card mb-4\" style={{ color: \"#037FFF\" }} key={key} >\n                      <div className=\"card-header\">\n                        <img\n                          className='mr-2'\n                          width='30'\n                          height='30'\n                          src={`data:image/png;base64,${new Identicon(users_var.author, 30).toString()}`}\n                        />\n                        <small className=\"text-muted\">{users_var.author}</small>\n                      </div>\n                      <ul id=\"imageList\" className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">\n                        <form onSubmit={(event) => {\n                          event.preventDefault()\n                          \n                          const source = users_var.source\n                          const destination = users_var.destination\n                          const date = users_var.date\n                          const time = users_var.time\n                          console.log(users_var.time)\n                          const rider = users_var.author\n                          const amount = this.rideamount.value\n                          this.props.uploadRide(source,destination,date,time,rider,amount)}} >\n                          \n                          <p><b>Source: </b>{users_var.source}</p>\n                          <p><b>Destination: </b>{users_var.destination}</p>\n                          <p><b>Date: </b>{users_var.date}</p>\n                          <p><b>Time: </b>{users_var.time}</p>\n                          <p><b>Amount:</b></p>\n                          <input\n                          id=\"rideamount\"\n                          type=\"number\"\n                          ref={(input) => { this.rideamount = input }}\n                          className=\"form-control\"\n                          placeholder=\"Ride amount\"\n                          required /> \n\n                         \n                          \n                          <button type=\"submit\" className=\"btn btn-success btn-x btn-grp mr-2\">Accept</button>\n                        \n                          </form>\n                          </li>\n                        \n                      </ul>\n                      <div className=\"btn-group\">\n                        \n                        <button type=\"submit\" className=\"btn btn-danger btn-x btn-grp mr-2\">Reject</button>\n                      </div>\n                    </div>\n                  )\n                // }\n                \n              })}\n\n                <br/>\n              <br/>\n              \n\n\n\n                \n\n            </div>\n        \n    );\n  }\n}\n\nexport default Requests;",["99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":13,"column":12,"nodeType":"107","messageId":"108","endLine":13,"endColumn":19},{"ruleId":"105","severity":1,"message":"109","line":1,"column":17,"nodeType":"107","messageId":"108","endLine":1,"endColumn":26},{"ruleId":"105","severity":1,"message":"110","line":12,"column":12,"nodeType":"107","messageId":"108","endLine":12,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":52,"column":47,"nodeType":"113","endLine":57,"endColumn":47},{"ruleId":"105","severity":1,"message":"106","line":13,"column":10,"nodeType":"107","messageId":"108","endLine":13,"endColumn":17},{"ruleId":"105","severity":1,"message":"114","line":14,"column":10,"nodeType":"107","messageId":"108","endLine":14,"endColumn":15},{"ruleId":"105","severity":1,"message":"115","line":14,"column":17,"nodeType":"107","messageId":"108","endLine":14,"endColumn":25},{"ruleId":"105","severity":1,"message":"116","line":3,"column":9,"nodeType":"107","messageId":"108","endLine":3,"endColumn":12},{"ruleId":"105","severity":1,"message":"117","line":3,"column":14,"nodeType":"107","messageId":"108","endLine":3,"endColumn":24},{"ruleId":"105","severity":1,"message":"118","line":3,"column":26,"nodeType":"107","messageId":"108","endLine":3,"endColumn":32},{"ruleId":"119","severity":1,"message":"120","line":34,"column":12,"nodeType":"121","endLine":34,"endColumn":23},{"ruleId":"122","severity":1,"message":"123","line":89,"column":52,"nodeType":"124","messageId":"125","endLine":89,"endColumn":54},{"ruleId":"126","severity":1,"message":"127","line":92,"column":39,"nodeType":"128","messageId":"129","endLine":92,"endColumn":41},{"ruleId":"111","severity":1,"message":"112","line":97,"column":25,"nodeType":"113","endLine":102,"endColumn":27},{"ruleId":"130","severity":1,"message":"131","line":38,"column":29,"nodeType":"107","messageId":"132","endLine":38,"endColumn":39},{"ruleId":"105","severity":1,"message":"133","line":127,"column":11,"nodeType":"107","messageId":"108","endLine":127,"endColumn":15},{"ruleId":"105","severity":1,"message":"134","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"135","line":2,"column":16,"nodeType":"107","messageId":"108","endLine":2,"endColumn":22},{"ruleId":"105","severity":1,"message":"136","line":2,"column":24,"nodeType":"107","messageId":"108","endLine":2,"endColumn":28},{"ruleId":"105","severity":1,"message":"137","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":12,"column":12,"nodeType":"107","messageId":"108","endLine":12,"endColumn":19},{"ruleId":"138","severity":1,"message":"139","line":67,"column":15,"nodeType":"113","endLine":67,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":68,"column":15,"nodeType":"113","endLine":68,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":69,"column":15,"nodeType":"113","endLine":69,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":13,"column":12,"nodeType":"107","messageId":"108","endLine":13,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":17,"column":25,"nodeType":"113","endLine":22,"endColumn":27},{"ruleId":"101","replacedBy":"140"},{"ruleId":"103","replacedBy":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.","'error' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'Map' is defined but never used.","'InfoWindow' is defined but never used.","'Marker' is defined but never used.","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-use-before-define","'balanceacc' was used before it was defined.","usedBeforeDefined","'addr' is assigned a value but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["142"],["143"],"no-global-assign","no-unsafe-negation"]